
version: 2.1

jobs:
  run-api-tests: 
    docker:
      - image: cimg/python:3.10.2
    
    parameters:
      cmd:
        type: string
        default: ""
      msg:
        type: string
        default: ""
      env:
        type: string
        default: ""
      reg:
        type: string
        default: ""

    steps:
      - checkout
      - run:
          name: run tests
          no_output_timeout: 30m
          command: |
            echo << parameters.cmd >>
            echo << parameters.env >>
            echo << parameters.reg >>
            cd tests
            python -m venv venv
            . venv/bin/activate
            python -m pip install --upgrade pip
            pip install wheel
            pip install -r requirements.txt
            # pytest -v -s
            << parameters.cmd >>
            


workflows:
  # version: 2

  api-tests:
    when:
      equal: [ "every_min", << pipeline.schedule.name >> ]
      
      
#     jobs:
#       - run-api-tests:
#           name: job-name-1
#           cmd: pytest -v -s
#           msg: "run job-1"
          
#       - run-api-tests:
#           name: job-name-2
#           requires:
#             - job-name-1
#           cmd: pytest -v -s
#           msg: "run job-2"
          
#       - run-api-tests:
#           name: job-name-3
#           requires:
#             - job-name-2
#           cmd: pytest -v -s
#           msg: "run job-3"


    jobs:
      - run-api-tests:
          name: job-name-1-<< matrix.env >>-<< matrix.reg >>
          cmd: pytest -v -s --env << matrix.env >> --reg << matrix.reg >>
          matrix:
            parameters:
              env: [dev, stg, prd]
              reg: [aws, eu01, jp]
            exclude:
              - reg: aws
                env: dev
                
                

              
#       - run-api-tests:
#           name: job-name-2-<< matrix.env >>-<< matrix.reg >>
#           cmd: pytest -v -s --env << matrix.env >> --reg << matrix.reg >>
#           matrix:
#             parameters:
#               env: [dev, stg, prd]
#               reg: [aws]

#       - run-api-tests:
#           requires:
#             - job-name-2-<< matrix.env >>-<< matrix.reg >>
#           name: job-name-3-<< matrix.env >>-<< matrix.reg >>
#           cmd: pytest -v -s --env << matrix.env >> --reg << matrix.reg >>
#           matrix:
#             parameters:
#               env: [dev, stg, prd]
#               reg: [aws]


